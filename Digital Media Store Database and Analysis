/* 
    Database for digital media store and includes 
    tables for artists, albums, media tracks, invoices, and customers.

    From: Break Into Tech by Charlotte Chaze
    https://breakintotech.teachable.com/
*/




/* 
    Customers who are not in the US.  Includes full name,
    customer id, and country.
*/

SELECT 
    customers.FirstName||" "||customers.LastName, 
    customers.customerid, 
    customers.country
FROM chinook.customers
    WHERE customers.Country <> "USA";





/* 
    What are the invoices from the customers from Brazil?
    Includes customer's full name, customer id, invoice date, their address, and
    purchases (name of song and its composer). 
*/

SELECT 
    customers.FirstName||" "||customers.LastName AS Customer_Name, 
    customers.customerid, 
    invoices.InvoiceDate,
    invoices.BillingAddress||" "||invoices.BillingCity||", "||invoices.BillingPostalCode AS Address,
    tracks.Name AS Song,
    tracks.Composer
FROM chinook.customers
   INNER JOIN invoices
       ON customers.CustomerId = invoices.CustomerId
   INNER JOIN invoice_items
       ON invoices.InvoiceId  = invoice_items.InvoiceId
   INNER JOIN tracks
       ON invoice_items.TrackId = tracks.TrackId
    WHERE customers.Country = "Brazil";





/* 
    How much did each customer spend in total?
*/

SELECT customers.FirstName||" "||customers.LastName,
    SUM(invoices.Total) AS Total_Spent
FROM customers
    INNER JOIN invoices
        ON customers.CustomerId = invoices.CustomerId
    GROUP BY customers.CustomerId;





/* 
    What are the total sales for each Sales Agent?
*/

SELECT employees.FirstName||" "||employees.LastName AS employee_name,
    employees.Title,
    ROUND(SUM(invoices.Total),2) AS Total_Sales
FROM employees
    INNER JOIN customers
    ON employees.EmployeeId = customers.SupportRepId
    INNER JOIN invoices
        ON customers.CustomerId = invoices.CustomerId
    GROUP BY employees.EmployeeId;






/*
    Who had the most sales in 2009?
*/

SELECT employees.FirstName||" "||employees.LastName AS employee_name,
    employees.Title,
    ROUND(SUM(invoices.Total),2) AS Total_Sales
FROM employees
    INNER JOIN customers
    ON employees.EmployeeId = customers.SupportRepId
    INNER JOIN invoices
        ON customers.CustomerId = invoices.CustomerId
    GROUP BY employees.EmployeeId
    HAVING invoices.invoicedate LIKE "2009%"
    ORDER BY Total_Sales
    Limit 1;





/*
    What countries order from the digital store and how
    many orders did they receive?
*/

SELECT DISTINCT(country),
    COUNT (invoices.InvoiceId) 
FROM customers
    INNER JOIN invoices
        ON customers.CustomerId = invoices.CustomerID
    GROUP BY country
    ORDER BY country;




/*
    What playlists are the most purchased and profitable?
*/

SELECT playlists.Name,
    SUM(invoice_items.Quantity) AS total_purchased,
    SUM(invoice_items.Quantity)*invoice_items.UnitPrice AS total_sales
FROM playlists
    INNER JOIN playlist_track
        ON playlists.PlaylistId = playlist_track.PlaylistId
    INNER JOIN tracks
        ON playlist_track.TrackId = tracks.TrackId
    INNER JOIN invoice_items
        ON tracks.TrackId = invoice_items.TrackId
    GROUP BY playlists.Name
    ORDER BY total_purchased DESC;





/*
    How many invoices where there in 2009?  
    What was the total revenue?
*/

SELECT COUNT(invoicedate) AS num_of_invoices,
    ROUND(SUM(total),2) AS total_revenue
FROM invoices
WHERE invoicedate LIKE "2009%";





/*
    Lists the products offered at the digital store.  
    Includes: title, album or volume name, 
    artist or show name, genre, and media type
*/

SELECT tracks.name AS Title,
    albums.title AS Album_or_Season,
    artists.Name AS Artist_or_Show,
    genres.Name AS Genre,
    media_types.Name AS Media_Type
FROM tracks
    INNER JOIN albums
        ON tracks.AlbumId = albums.AlbumId
    INNER JOIN artists
        ON albums.ArtistId = artists.ArtistId
    INNER JOIN genres
        ON tracks.GenreId = genres.GenreId
    INNER JOIN media_types
        ON tracks.MediaTypeId = media_types.MediaTypeId;





/*
    Lists the show names, seasons, genre and media types
    of all of the videos offered.
*/

SELECT 
    artists.Name AS Shows,
    albums.title AS Season,
    genres.Name AS Genre,
    media_types.Name AS Media_Type
FROM tracks
    INNER JOIN albums
        ON tracks.AlbumId = albums.AlbumId
    INNER JOIN artists
        ON albums.ArtistId = artists.ArtistId
    INNER JOIN genres
        ON tracks.GenreId = genres.GenreId
    INNER JOIN media_types
        ON tracks.MediaTypeId = media_types.MediaTypeId
    WHERE genres.Name = "TV Shows"
        OR genres.Name LIKE "Sci%Fi%"
        OR genres.Name = "Drama"
        OR genres.Name = "Comedy";





/*
    Which employee was most recently hired?  What were they hired for?
*/

SELECT employees.FirstName||" "||employees.LastName AS employee_name,
    employees.EmployeeId,
    employees.Title,
    MAX(employees.HireDate) AS hiring_date
FROM employees;







/* 
    Shows which employees report to which supervisor.
*/

SELECT employees.FirstName||" "||employees.LastName AS employee_name,
    e.FirstName||" "||e.LastName AS boss_name,
    e.Title
FROM employees
    INNER JOIN employees e
        ON employees.ReportsTo = e.EmployeeID;





















    








