-- Exercise #1: Basic Select
-- Query all columns for all American cities in the CITY table with populations 
-- larger than 100000. The CountryCode for America is USA.

SELECT * FROM city
  WHERE population >100000 
    AND countrycode = "USA";

-- Excercise #2: Basic Select
-- Query the NAME field for all American cities in the CITY table with 
-- populations larger than 120000. The CountryCode for America is USA

SELECT name FROM city
WHERE population > 120000
AND countrycode = "USA";

-- Excercise #3
-- Query a list of CITY names from STATION for cities that have an even ID number. 
-- Print the results in any order, but exclude duplicates from the answer.

SELECT DISTINCT city FROM station
  WHERE id%2 = 0;

-- Excercise #4
-- Query the two cities in STATION with the shortest and longest CITY names, 
-- as well as their respective lengths (i.e.: number of characters in the name). 
-- If there is more than one smallest or largest city, choose the one that comes 
-- first when ordered alphabetically.

SELECT city, LENGTH(city) FROM station
  GROUP BY city
  ORDER BY LENGTH(city) ASC, city ASC
  LIMIT 1;

SELECT city, LENGTH(city) FROM station
  GROUP BY city
  ORDER BY LENGTH(city) DESC, city ASC
  LIMIT 1;

-- Excercise #5
-- Query the list of CITY names starting with vowels 
-- (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.

SELECT city FROM station
  GROUP BY city
  HAVING LEFT(city,1) = 'A' OR
    LEFT(city,1) = 'E' OR
    LEFT(city,1) = 'I' OR
    LEFT(city,1) = 'O' OR
    LEFT(city,1) = 'U';
    
-- Exercise #6:
-- Query the list of CITY names from STATION which have vowels 
-- (i.e., a, e, i, o, and u) as both their first and last characters. 
-- Your result cannot contain duplicates.

SELECT city FROM station
  GROUP BY city
  HAVING (RIGHT(city,1) = 'A' OR
    RIGHT(city,1) = 'E' OR
    RIGHT(city,1) = 'I' OR
    RIGHT(city,1) = 'O' OR
    RIGHT(city,1) = 'U')
      AND 
    (LEFT(city,1) = 'A' OR
    LEFT(city,1) = 'E' OR
    LEFT(city,1) = 'I' OR
    LEFT(city,1) = 'O' OR
    LEFT(city,1) = 'U');
    
-- Exercise #7:
-- Query the list of CITY names from STATION that either do not 
-- start with vowels or do not end with vowels.
-- Your result cannot contain duplicates.

SELECT city FROM station
GROUP BY city
HAVING ( 
    LEFT(city,1) <> "A" AND
    LEFT(city,1) <> "E" AND
    LEFT(city,1) <> "I" AND
    LEFT(city,1) <> "O" AND
    LEFT(city,1) <> "U" 
    )
    OR
    ( 
    RIGHT(city,1) <> "A" AND
    RIGHT(city,1) <> "E" AND
    RIGHT(city,1) <> "I" AND
    RIGHT(city,1) <> "O" AND
    RIGHT(city,1) <> "U" 
    );
    
-- Exercise 8:
-- Write a query identifying the type of each record in the TRIANGLES 
-- table using its three side lengths. Output one of the following 
-- statements for each record in the table:
--     Equilateral: It's a triangle with  sides of equal length.
--     Isosceles: It's a triangle with  sides of equal length.
--     Scalene: It's a triangle with  sides of differing lengths.
--     Not A Triangle: The given values of A, B, and C don't form a triangle.
-- Input is a tuple.

SELECT 
    CASE 
        WHEN ((A + B <= C) OR (B + C <= A) OR (A + C <= B)) 
            THEN "Not A Triangle"
        WHEN (A = B AND A = C AND B = C) THEN "Equilateral"
        WHEN ((A = B AND A<>C) OR 
              (A = C AND B<>C) OR
              (B = C AND A<>B))THEN "Isosceles"
        ELSE "Scalene"
    END
FROM triangles;
